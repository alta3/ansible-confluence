---
- name: bootstrap ansible
  hosts: confluence
  gather_facts: false
  roles:
   - ansible-bootstrap


- hosts: confluence
  user: ubuntu
  vars:
    dbname: confluence
    dbuser: confluenceuser
    confl_bin: atlassian-confluence-6.1.1-x64.bin
#    confl_url: http://www.atlassian.com/software/confluence/downloads/binary/{{confl_bin}}
    confl_url: https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-6.1.1-x64.bin
    backupfile: xmlexport-20170420-125806-97.zip
    ansible_ssh_pipelining: true
  become: true

  vars_files:
   - postgres_pass.yml
  
  tasks: 
   - name: apt update
     apt:  
      update_cache: yes 
      cache_valid_time: 3600

   - name: apt upgrade
     apt: 
      upgrade: dist
     become: true

   - name: ensure postgres installed
     apt: 
       name: "{{ item }}"
       state: present
     with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python-psycopg2 
        - acl
        - python-urllib3
        - python-openssl
        - python-ndg-httpsclient
        - python-pyasn1
        - libpostgresql-jdbc-java
     become: true  


   - name: ensure passwordless postgres user
     copy: 
       src: files/sudoers 
       dest: /etc/sudoers
     become: true 

 
   - name: ensure database created   
     postgresql_db: 
       name: '{{dbname}}'
       encoding: 'UTF-8'
     become: true
     become_user: postgres

   - name: ensure user has access to database
     postgresql_user: 
       db: '{{dbname}}'
       name: '{{dbuser}}'
       password: '{{dbpass}}'
       priv: ALL
     become: true 
     become_user: postgres
     
   - name: ensure user does not have unnecessary privilege
     postgresql_user: 
       name: '{{dbuser}}'
       role_attr_flags: NOSUPERUSER,NOCREATEDB
     become: true
     become_user: postgres


   - name: download confluence
     get_url: 
        url: '{{confl_url}}' 
        dest: /var/tmp/{{confl_bin}} 
        mode: 0755

   - name: copy down response.varfile
     copy: 
       src: files/response.varfile 
       dest: /var/tmp/response.varfile 
     become: true

   - name: install confluence
     command: /var/tmp/{{confl_bin}} -q -varfile /var/tmp/response.varfile
       creates=/opt/atlassian/confluence/install.reg

   - name: copy confluence.conf so that UPSTART starts confluence on reboot
     copy: 
        src: files/confluence.conf 
        dest: /etc/init/confluence.conf
     become: true

   - name: copy backup file to confluence
     copy: 
        src: backup/{{ backupfile }}
        dest: /home/ubuntu/{{ backupfile }}

